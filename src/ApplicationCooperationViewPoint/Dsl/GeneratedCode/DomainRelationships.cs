//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace Bb.ApplicationCooperationViewPoint
{
	/// <summary>
	/// DomainRelationship CooperationModelHasElements
	/// Embedding relationship between the Model and Elements
	/// </summary>
	[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("a56654a5-67b4-4c46-9617-d126e33ee736")]
	public partial class CooperationModelHasElements : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// CooperationModelHasElements domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa56654a5, 0x67b4, 0x4c46, 0x96, 0x17, 0xd1, 0x26, 0xe3, 0x3e, 0xe7, 0x36);
	
				
		/// <summary>
		/// Constructor
		/// Creates a CooperationModelHasElements link in the same Partition as the given CooperationModel
		/// </summary>
		/// <param name="source">CooperationModel to use as the source of the relationship.</param>
		/// <param name="target">CooperationElement to use as the target of the relationship.</param>
		public CooperationModelHasElements(CooperationModel source, CooperationElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(CooperationModelHasElements.CooperationModelDomainRoleId, source), new DslModeling::RoleAssignment(CooperationModelHasElements.ElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationModelHasElements(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationModelHasElements(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationModelHasElements(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationModelHasElements(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region CooperationModel domain role code
		
		/// <summary>
		/// CooperationModel domain role Id.
		/// </summary>
		public static readonly global::System.Guid CooperationModelDomainRoleId = new global::System.Guid(0x8e1caa2f, 0xc5e8, 0x439c, 0x99, 0x09, 0xd3, 0x3e, 0x8b, 0xc1, 0x3c, 0x8f);
		
		/// <summary>
		/// DomainRole CooperationModel
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/CooperationModel.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/CooperationModel.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Elements", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/CooperationModel.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("8e1caa2f-c5e8-439c-9909-d33e8bc13c8f")]
		public virtual CooperationModel CooperationModel
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationModel)DslModeling::DomainRoleInfo.GetRolePlayer(this, CooperationModelDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CooperationModelDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access CooperationModel of a CooperationElement
		/// <summary>
		/// Gets CooperationModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static CooperationModel GetCooperationModel(CooperationElement element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ElementDomainRoleId) as CooperationModel;
		}
		
		/// <summary>
		/// Sets CooperationModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetCooperationModel(CooperationElement element, CooperationModel newCooperationModel)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ElementDomainRoleId, newCooperationModel);
		}
		#endregion
		#region Element domain role code
		
		/// <summary>
		/// Element domain role Id.
		/// </summary>
		public static readonly global::System.Guid ElementDomainRoleId = new global::System.Guid(0x31224c1c, 0xde69, 0x4216, 0xac, 0xdc, 0xa8, 0xa3, 0x47, 0xed, 0x4b, 0xf2);
		
		/// <summary>
		/// DomainRole Element
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/Element.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/Element.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "CooperationModel", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationModelHasElements/Element.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("31224c1c-de69-4216-acdc-a8a347ed4bf2")]
		public virtual CooperationElement Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, ElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Elements of a CooperationModel
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationElement> GetElements(CooperationModel element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationElement>, CooperationElement>(element, CooperationModelDomainRoleId);
		}
		#endregion
		#region CooperationModel link accessor
		/// <summary>
		/// Get the list of CooperationModelHasElements links to a CooperationModel.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> GetLinksToElements ( global::Bb.ApplicationCooperationViewPoint.CooperationModel cooperationModelInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements>(cooperationModelInstance, global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.CooperationModelDomainRoleId);
		}
		#endregion
		#region Element link accessor
		/// <summary>
		/// Get the CooperationModelHasElements link to a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements GetLinkToCooperationModel (global::Bb.ApplicationCooperationViewPoint.CooperationElement elementInstance)
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements>(elementInstance, global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.ElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Element not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region CooperationModelHasElements instance accessors
		
		/// <summary>
		/// Get any CooperationModelHasElements links between a given CooperationModel and a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> GetLinks( global::Bb.ApplicationCooperationViewPoint.CooperationModel source, global::Bb.ApplicationCooperationViewPoint.CooperationElement target )
		{
			global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> outLinks = new global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements>();
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements>(source, global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.CooperationModelDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one CooperationModelHasElements link between a given CooperationModeland a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements GetLink( global::Bb.ApplicationCooperationViewPoint.CooperationModel source, global::Bb.ApplicationCooperationViewPoint.CooperationElement target )
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements>(source, global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements.CooperationModelDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationModelHasElements link in links )
			{
				if ( target.Equals(link.Element) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Bb.ApplicationCooperationViewPoint
{
	/// <summary>
	/// DomainRelationship CooperationElementReferencesTargets
	/// Reference relationship between Elements.
	/// </summary>
	[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("b42ccc47-8c9e-4875-8b5d-4f129b6d2a59")]
	public partial class CooperationElementReferencesTargets : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// CooperationElementReferencesTargets domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xb42ccc47, 0x8c9e, 0x4875, 0x8b, 0x5d, 0x4f, 0x12, 0x9b, 0x6d, 0x2a, 0x59);
	
				
		/// <summary>
		/// Constructor
		/// Creates a CooperationElementReferencesTargets link in the same Partition as the given CooperationElement
		/// </summary>
		/// <param name="source">CooperationElement to use as the source of the relationship.</param>
		/// <param name="target">CooperationElement to use as the target of the relationship.</param>
		public CooperationElementReferencesTargets(CooperationElement source, CooperationElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(CooperationElementReferencesTargets.SourceDomainRoleId, source), new DslModeling::RoleAssignment(CooperationElementReferencesTargets.TargetDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationElementReferencesTargets(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationElementReferencesTargets(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationElementReferencesTargets(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationElementReferencesTargets(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Source domain role code
		
		/// <summary>
		/// Source domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceDomainRoleId = new global::System.Guid(0x4da54a79, 0xf251, 0x47e5, 0xbb, 0x31, 0x09, 0x64, 0xf9, 0x8f, 0xea, 0xa3);
		
		/// <summary>
		/// DomainRole Source
		/// Description for Bb.ApplicationCooperationViewPoint.ExampleRelationship.Target
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Source.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Source.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Targets", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Source.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4da54a79-f251-47e5-bb31-0964f98feaa3")]
		public virtual CooperationElement Source
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Sources of a CooperationElement
		/// <summary>
		/// Gets a list of Sources.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationElement> GetSources(CooperationElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationElement>, CooperationElement>(element, TargetDomainRoleId);
		}
		#endregion
		#region Target domain role code
		
		/// <summary>
		/// Target domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetDomainRoleId = new global::System.Guid(0x4bf9ba8e, 0x1912, 0x4d37, 0x83, 0x25, 0x1a, 0xa5, 0x0d, 0xdb, 0x63, 0xfb);
		
		/// <summary>
		/// DomainRole Target
		/// Description for Bb.ApplicationCooperationViewPoint.ExampleRelationship.Source
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Target.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Target.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Sources", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets/Target.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("4bf9ba8e-1912-4d37-8325-1aa50ddb63fb")]
		public virtual CooperationElement Target
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Targets of a CooperationElement
		/// <summary>
		/// Gets a list of Targets.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationElement> GetTargets(CooperationElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationElement>, CooperationElement>(element, SourceDomainRoleId);
		}
		#endregion
		#region Source link accessor
		/// <summary>
		/// Get the list of CooperationElementReferencesTargets links to a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> GetLinksToTargets ( global::Bb.ApplicationCooperationViewPoint.CooperationElement sourceInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets>(sourceInstance, global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.SourceDomainRoleId);
		}
		#endregion
		#region Target link accessor
		/// <summary>
		/// Get the list of CooperationElementReferencesTargets links to a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> GetLinksToSources ( global::Bb.ApplicationCooperationViewPoint.CooperationElement targetInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets>(targetInstance, global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.TargetDomainRoleId);
		}
		#endregion
		#region CooperationElementReferencesTargets instance accessors
		
		/// <summary>
		/// Get any CooperationElementReferencesTargets links between a given CooperationElement and a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> GetLinks( global::Bb.ApplicationCooperationViewPoint.CooperationElement source, global::Bb.ApplicationCooperationViewPoint.CooperationElement target )
		{
			global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> outLinks = new global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets>();
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets>(source, global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.SourceDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one CooperationElementReferencesTargets link between a given CooperationElementand a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets GetLink( global::Bb.ApplicationCooperationViewPoint.CooperationElement source, global::Bb.ApplicationCooperationViewPoint.CooperationElement target )
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets>(source, global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets.SourceDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationElementReferencesTargets link in links )
			{
				if ( target.Equals(link.Target) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Bb.ApplicationCooperationViewPoint
{
	/// <summary>
	/// DomainRelationship CooperationElementHasCooperationSubElement
	/// Description de
	/// Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement
	/// </summary>
	[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("065c38c4-7f53-46b7-87ab-6ebfcd243ab6")]
	public partial class CooperationElementHasCooperationSubElement : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// CooperationElementHasCooperationSubElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x065c38c4, 0x7f53, 0x46b7, 0x87, 0xab, 0x6e, 0xbf, 0xcd, 0x24, 0x3a, 0xb6);
	
				
		/// <summary>
		/// Constructor
		/// Creates a CooperationElementHasCooperationSubElement link in the same Partition as the given CooperationElement
		/// </summary>
		/// <param name="source">CooperationElement to use as the source of the relationship.</param>
		/// <param name="target">CooperationSubElement to use as the target of the relationship.</param>
		public CooperationElementHasCooperationSubElement(CooperationElement source, CooperationSubElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(CooperationElementHasCooperationSubElement.ParentDomainRoleId, source), new DslModeling::RoleAssignment(CooperationElementHasCooperationSubElement.CooperationSubElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationElementHasCooperationSubElement(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationElementHasCooperationSubElement(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationElementHasCooperationSubElement(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationElementHasCooperationSubElement(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Parent domain role code
		
		/// <summary>
		/// Parent domain role Id.
		/// </summary>
		public static readonly global::System.Guid ParentDomainRoleId = new global::System.Guid(0x798fe20c, 0xd3f4, 0x4796, 0xac, 0x52, 0x54, 0x22, 0x98, 0x85, 0x1c, 0xe8);
		
		/// <summary>
		/// DomainRole Parent
		/// Description de
		/// Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.Parent
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/Parent.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/Parent.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "CooperationSubElement", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/Parent.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("798fe20c-d3f4-4796-ac52-542298851ce8")]
		public virtual CooperationElement Parent
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, ParentDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ParentDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Parent of a CooperationSubElement
		/// <summary>
		/// Gets Parent.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static CooperationElement GetParent(CooperationSubElement element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, CooperationSubElementDomainRoleId) as CooperationElement;
		}
		
		/// <summary>
		/// Sets Parent.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetParent(CooperationSubElement element, CooperationElement newParent)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, CooperationSubElementDomainRoleId, newParent);
		}
		#endregion
		#region CooperationSubElement domain role code
		
		/// <summary>
		/// CooperationSubElement domain role Id.
		/// </summary>
		public static readonly global::System.Guid CooperationSubElementDomainRoleId = new global::System.Guid(0x2d373726, 0xda2b, 0x45f8, 0xb7, 0xd9, 0x3c, 0xe7, 0xeb, 0x9f, 0x8f, 0x95);
		
		/// <summary>
		/// DomainRole CooperationSubElement
		/// Description de
		/// Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.CooperationSubElement
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/CooperationSubElement.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/CooperationSubElement.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Parent", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement/CooperationSubElement.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("2d373726-da2b-45f8-b7d9-3ce7eb9f8f95")]
		public virtual CooperationSubElement CooperationSubElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationSubElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, CooperationSubElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, CooperationSubElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access CooperationSubElement of a CooperationElement
		/// <summary>
		/// Gets a list of CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationSubElement> GetCooperationSubElement(CooperationElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationSubElement>, CooperationSubElement>(element, ParentDomainRoleId);
		}
		#endregion
		#region Parent link accessor
		/// <summary>
		/// Get the list of CooperationElementHasCooperationSubElement links to a CooperationElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> GetLinksToCooperationSubElement ( global::Bb.ApplicationCooperationViewPoint.CooperationElement parentInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement>(parentInstance, global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.ParentDomainRoleId);
		}
		#endregion
		#region CooperationSubElement link accessor
		/// <summary>
		/// Get the CooperationElementHasCooperationSubElement link to a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement GetLinkToParent (global::Bb.ApplicationCooperationViewPoint.CooperationSubElement cooperationSubElementInstance)
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement>(cooperationSubElementInstance, global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.CooperationSubElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of CooperationSubElement not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region CooperationElementHasCooperationSubElement instance accessors
		
		/// <summary>
		/// Get any CooperationElementHasCooperationSubElement links between a given CooperationElement and a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> GetLinks( global::Bb.ApplicationCooperationViewPoint.CooperationElement source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElement target )
		{
			global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> outLinks = new global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement>();
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement>(source, global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.ParentDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement link in links )
			{
				if ( target.Equals(link.CooperationSubElement) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one CooperationElementHasCooperationSubElement link between a given CooperationElementand a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement GetLink( global::Bb.ApplicationCooperationViewPoint.CooperationElement source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElement target )
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement>(source, global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement.ParentDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationElementHasCooperationSubElement link in links )
			{
				if ( target.Equals(link.CooperationSubElement) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace Bb.ApplicationCooperationViewPoint
{
	/// <summary>
	/// DomainRelationship CooperationSubElementReferencesTargetCooperationSubElement
	/// Description de
	/// Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement
	/// </summary>
	[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("0a79f2c6-f1b8-4956-9cfd-da6cb3efb1c5")]
	public partial class CooperationSubElementReferencesTargetCooperationSubElement : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// CooperationSubElementReferencesTargetCooperationSubElement domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0a79f2c6, 0xf1b8, 0x4956, 0x9c, 0xfd, 0xda, 0x6c, 0xb3, 0xef, 0xb1, 0xc5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a CooperationSubElementReferencesTargetCooperationSubElement link in the same Partition as the given CooperationSubElement
		/// </summary>
		/// <param name="source">CooperationSubElement to use as the source of the relationship.</param>
		/// <param name="target">CooperationSubElement to use as the target of the relationship.</param>
		public CooperationSubElementReferencesTargetCooperationSubElement(CooperationSubElement source, CooperationSubElement target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(CooperationSubElementReferencesTargetCooperationSubElement.SourceCooperationSubElementDomainRoleId, source), new DslModeling::RoleAssignment(CooperationSubElementReferencesTargetCooperationSubElement.TargetCooperationSubElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationSubElementReferencesTargetCooperationSubElement(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationSubElementReferencesTargetCooperationSubElement(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public CooperationSubElementReferencesTargetCooperationSubElement(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public CooperationSubElementReferencesTargetCooperationSubElement(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region SourceCooperationSubElement domain role code
		
		/// <summary>
		/// SourceCooperationSubElement domain role Id.
		/// </summary>
		public static readonly global::System.Guid SourceCooperationSubElementDomainRoleId = new global::System.Guid(0x8fb85cb6, 0xff65, 0x49cb, 0xb1, 0xf9, 0x1b, 0x09, 0x7e, 0xed, 0x4a, 0x7c);
		
		/// <summary>
		/// DomainRole SourceCooperationSubElement
		/// Description de
		/// Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.SourceCooperationSubElement
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/SourceCooperationSubElement.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/SourceCooperationSubElement.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "TargetCooperationSubElement", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/SourceCooperationSubElement.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("8fb85cb6-ff65-49cb-b1f9-1b097eed4a7c")]
		public virtual CooperationSubElement SourceCooperationSubElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationSubElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, SourceCooperationSubElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, SourceCooperationSubElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access SourceCooperationSubElement of a CooperationSubElement
		/// <summary>
		/// Gets a list of SourceCooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationSubElement> GetSourceCooperationSubElement(CooperationSubElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationSubElement>, CooperationSubElement>(element, TargetCooperationSubElementDomainRoleId);
		}
		#endregion
		#region TargetCooperationSubElement domain role code
		
		/// <summary>
		/// TargetCooperationSubElement domain role Id.
		/// </summary>
		public static readonly global::System.Guid TargetCooperationSubElementDomainRoleId = new global::System.Guid(0x918b929d, 0x6958, 0x4610, 0xa4, 0xb9, 0xc0, 0x2e, 0x94, 0xd7, 0x35, 0x42);
		
		/// <summary>
		/// DomainRole TargetCooperationSubElement
		/// Description de
		/// Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.TargetCooperationSubElement
		/// </summary>
		[DslDesign::DisplayNameResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/TargetCooperationSubElement.DisplayName", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/TargetCooperationSubElement.Description", typeof(global::Bb.ApplicationCooperationViewPoint.ApplicationCooperationViewPointDomainModel), "Bb.ApplicationCooperationViewPoint.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "SourceCooperationSubElement", PropertyDisplayNameKey="Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement/TargetCooperationSubElement.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("918b929d-6958-4610-a4b9-c02e94d73542")]
		public virtual CooperationSubElement TargetCooperationSubElement
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (CooperationSubElement)DslModeling::DomainRoleInfo.GetRolePlayer(this, TargetCooperationSubElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TargetCooperationSubElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TargetCooperationSubElement of a CooperationSubElement
		/// <summary>
		/// Gets a list of TargetCooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<CooperationSubElement> GetTargetCooperationSubElement(CooperationSubElement element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<CooperationSubElement>, CooperationSubElement>(element, SourceCooperationSubElementDomainRoleId);
		}
		#endregion
		#region SourceCooperationSubElement link accessor
		/// <summary>
		/// Get the list of CooperationSubElementReferencesTargetCooperationSubElement links to a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> GetLinksToTargetCooperationSubElement ( global::Bb.ApplicationCooperationViewPoint.CooperationSubElement sourceCooperationSubElementInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement>(sourceCooperationSubElementInstance, global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.SourceCooperationSubElementDomainRoleId);
		}
		#endregion
		#region TargetCooperationSubElement link accessor
		/// <summary>
		/// Get the list of CooperationSubElementReferencesTargetCooperationSubElement links to a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> GetLinksToSourceCooperationSubElement ( global::Bb.ApplicationCooperationViewPoint.CooperationSubElement targetCooperationSubElementInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement>(targetCooperationSubElementInstance, global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.TargetCooperationSubElementDomainRoleId);
		}
		#endregion
		#region CooperationSubElementReferencesTargetCooperationSubElement instance accessors
		
		/// <summary>
		/// Get any CooperationSubElementReferencesTargetCooperationSubElement links between a given CooperationSubElement and a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> GetLinks( global::Bb.ApplicationCooperationViewPoint.CooperationSubElement source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElement target )
		{
			global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> outLinks = new global::System.Collections.Generic.List<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement>();
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement>(source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.SourceCooperationSubElementDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement link in links )
			{
				if ( target.Equals(link.TargetCooperationSubElement) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one CooperationSubElementReferencesTargetCooperationSubElement link between a given CooperationSubElementand a CooperationSubElement.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement GetLink( global::Bb.ApplicationCooperationViewPoint.CooperationSubElement source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElement target )
		{
			global::System.Collections.Generic.IList<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement> links = DslModeling::DomainRoleInfo.GetElementLinks<global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement>(source, global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement.SourceCooperationSubElementDomainRoleId);
			foreach ( global::Bb.ApplicationCooperationViewPoint.CooperationSubElementReferencesTargetCooperationSubElement link in links )
			{
				if ( target.Equals(link.TargetCooperationSubElement) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
